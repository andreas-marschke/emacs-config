#name : #init_express
# --

/*
  package.json dependencies:
    "body-parser": "^1.13.3",
    "cookie-parser": "^1.3.5",
    "cookie-session": "^1.2.0",
    "express": "^4.13.3",
    "express-session": "^1.11.3",
    "express-ws": "^0.2.6",
    "morgan": "^1.6.1",
    "node-conf": "0.0.6"
*/

/** Use this in config/master.json:
    {
      "server" : {
        "listeners": [
          {
	    "protocol" : "http",
            "port": 3000,
	    "listen": "0.0.0.0"
	  }
	]
      }
    }
 */

var conf = require('node-conf'),
    http = require('http'),
    https = require('https'),
    fs = require('fs'),
    path = require('path'),
    morgan = require('morgan'),
    cookieParser = require('cookie-parser'),
    cookieSession = require('cookie-session'),
    bodyParser = require('body-parser'),
    config = conf.load(process.env.NODE_ENV);

if (typeof (config.server) === "undefined") {
	console.error("Error could not parse configuration. No Server was defined");
	process.exit(1);
}

var express = require('express');
var app = express();

app.use(cookieParser());
app.use(morgan("combined"));
app.use (bodyParser.json({extended: true}));
app.use (bodyParser.urlencoded({extended: true}));

app.use(express.static('public'));

for ( var i = 0; i < config.server.listeners.length; i++) {
	if (config.server.listeners[i].protocol === "http" ) {
		var server = http.createServer(app);
		server.listen(
			config.server.listeners[i].port,
			config.server.listeners[i].listen,
			function(){ console.log("HTTP-Server up!"); });
	} else if (config.server.listeners[i].protocol === "https" ) {

		var server = https.createServer({
			key: fs.readFileSync(path.resolve(config.server.listeners[i].key)),
			cert: fs.readFileSync(path.resolve(config.server.listeners[i].cert))
		},app);

		server.listen(
			config.server.listeners[i].port,
			config.server.listeners[i].listen,
			function(){
				console.log("HTTPS-Server up!");
			});
	}
}
